package com.iceteaviet.fastfoodfinder.ui.loginimport android.content.Intentimport android.os.Bundleimport android.view.Viewimport android.widget.Toastimport com.google.firebase.auth.AuthCredentialimport com.iceteaviet.fastfoodfinder.Appimport com.iceteaviet.fastfoodfinder.Rimport com.iceteaviet.fastfoodfinder.data.auth.provider.AuthHelperimport com.iceteaviet.fastfoodfinder.data.auth.provider.AuthRequestListenerimport com.iceteaviet.fastfoodfinder.data.auth.provider.FacebookAuthHelperimport com.iceteaviet.fastfoodfinder.data.auth.provider.GoogleAuthHelperimport com.iceteaviet.fastfoodfinder.data.remote.user.model.Userimport com.iceteaviet.fastfoodfinder.databinding.ActivityLoginBindingimport com.iceteaviet.fastfoodfinder.ui.base.BaseActivityimport com.iceteaviet.fastfoodfinder.ui.login.emaillogin.EmailLoginDialogimport com.iceteaviet.fastfoodfinder.ui.login.emailregister.EmailRegisterDialogimport com.iceteaviet.fastfoodfinder.utils.openMainActivityclass LoginActivity : BaseActivity(), LoginContract.View, View.OnClickListener {    override lateinit var presenter: LoginContract.Presenter    /**     * Views Ref     */    private lateinit var binding: ActivityLoginBinding    private var emailRegisterDialog: EmailRegisterDialog? = null    private var emailLoginDialog: EmailLoginDialog? = null    private var googleAuthHelper: AuthHelper<AuthCredential>? = null    private var facebookAuthHelper: AuthHelper<AuthCredential>? = null    override val layoutId: Int        get() = R.layout.activity_login    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        presenter = LoginPresenter(App.getDataManager(), App.getSchedulerProvider(), this)        binding = ActivityLoginBinding.inflate(layoutInflater)        setupUI()        googleAuthHelper = GoogleAuthHelper(this, getString(R.string.default_web_client_id))        facebookAuthHelper = FacebookAuthHelper(binding.btnFacebookSignin)        setupEventHandlers()    }    override fun onResume() {        super.onResume()        presenter.subscribe()    }    override fun onPause() {        super.onPause()        presenter.unsubscribe()    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        super.onActivityResult(requestCode, resultCode, data)        if (data == null)            return        if (requestCode == RC_GOOGLE_SIGN_IN) {            googleAuthHelper!!.onActivityResult(requestCode, resultCode, data)        } else {            // Pass the activity result back to the Facebook SDK            facebookAuthHelper!!.onActivityResult(requestCode, resultCode, data)        }    }    override fun onClick(v: View) {        when (v.id) {            R.id.btn_skip -> {                // Anonymous mode                presenter.onSkipButtonClick()            }            R.id.btn_register -> {                emailRegisterDialog?.show(supportFragmentManager, "dialog-email-register")            }            R.id.btn_login -> {                emailLoginDialog?.show(supportFragmentManager, "dialog-email-login")            }            R.id.btn_google_signin -> {                onGoogleSignInButtonClicked()            }        }    }    override fun exit() {        finish()    }    override fun showMainView() {        openMainActivity(this)        finish()    }    override fun showSignInFailMessage() {        Toast.makeText(this, R.string.authentication_failed, Toast.LENGTH_SHORT).show()    }    override fun showGeneralErrorMessage() {        Toast.makeText(this, R.string.error_general_error_code, Toast.LENGTH_LONG).show()    }    private fun setupUI() {        emailRegisterDialog = EmailRegisterDialog.newInstance()        emailLoginDialog = EmailLoginDialog.newInstance()    }    private fun setupEventHandlers() {        binding.btnSkip.setOnClickListener(this)        binding.btnRegister.setOnClickListener(this)        binding.btnLogin.setOnClickListener(this)        binding.btnGoogleSignin.setOnClickListener(this)        emailRegisterDialog?.setOnRegisterCompleteListener(object : EmailRegisterDialog.OnRegisterCompleteListener {            override fun onSuccess(user: User, dialog: EmailRegisterDialog) {                dialog.dismiss()                presenter.onRegisterSuccess(user)            }            override fun onError(e: Throwable) {                e.printStackTrace()            }        })        emailLoginDialog?.setOnLoginCompleteListener(object : EmailLoginDialog.OnLoginCompleteListener {            override fun onSuccess(user: User, dialog: EmailLoginDialog) {                dialog.dismiss()                presenter.onLoginSuccess(user)            }            override fun onError(e: Throwable) {                e.printStackTrace()            }        })        googleAuthHelper!!.setAuthRequestListener(object : AuthRequestListener<AuthCredential> {            override fun onSuccess(authCredential: AuthCredential, fromLastSignIn: Boolean) {                presenter.onRequestGoogleAccountSuccess(authCredential, fromLastSignIn)            }            override fun onFailed() {                showSignInFailMessage()            }        })        facebookAuthHelper!!.setAuthRequestListener(object : AuthRequestListener<AuthCredential> {            override fun onSuccess(authCredential: AuthCredential, fromLastSignIn: Boolean) {                presenter.onRequestFacebookAccountSuccess(authCredential)            }            override fun onFailed() {                showSignInFailMessage()            }        })    }    private fun onGoogleSignInButtonClicked() {        googleAuthHelper!!.startRequestAuthCredential()    }    companion object {        private val TAG = LoginActivity::class.java.simpleName        const val RC_GOOGLE_SIGN_IN = 1    }}